<template>
  <view class="container">
    <view class="img-wrap">
      <image class="img" src="{{book.book_image}}" /> 
    </view>
    <view class="book-msg">
      <view class="book-msg__name">{{book.book_name}}</view>
      <view class="book-msg__rent">市场价：<text class="book-rent">￥{{book.book_rent}}</text></view>
      <view class="book-msg__author">作者：{{book.book_author}}</view>
      <view class="book-msg__publisher">出版：{{book.publisher}}</view>
      <view class="book-msg__score">豆瓣：{{book.score}}</view>
      <view class="book-msg__sort">分类：
        <text class="sort-item" wx:for="{{book.book_tag}}" wx:for-item="item" wx:key="index">{{item}}</text>
      </view>
    </view>
    <view class="book-desc">
      <view class="desc__title">绘本介绍</view>
      <view class="desc__content">{{book.desc}}</view>
    </view>
    <view class="bottom">
      <view class="store">
        <image src="../../images/new/icon_cang@2x.png" class="img" @tap="storeBook" wx:if="{{!stored}}"/>
        <image src="../../images/new/icon_cangu@2x.png" class="img" @tap="storeBook" wx:else/>
      </view>
      <view class="go-shelf">
        <image src="../../images/new/icon_3u@2x.png" class="img"/>
      </view>
      <view class="add-shelf">
        <button>加入借书架</button>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class details extends wepy.page {
  config = {
    navigationBarTitleText: '图书详情'
  }
  data = {
    bookId: '',
    userInfo: {},
    book: {},
    stored: false
  }
  onLoad (query) {
    console.log('query', query)
    const bookId = query && +query.book_id
    this.bookId = bookId || this.book_id || 0
    this.userInfo = this.$parent.globalData.userInfo
    this.userId = this.$parent.globalData.open_id
    this.initPageData()
  }
  methods = {
    storeBook() {
      const self = this
      console.log(self.stored)
      if (this.$parent.globalData.authorize) {
        self.stored = !self.stored
        const { nickName } = this.userInfo
        wx.request({
          url: self.stored ? 'http://localhost:12306/storeBook' : 'http://localhost:12306/unStoreBook',
          data: {
            user_name: nickName,
            book_id: self.bookId
          },
          method: 'post',
          success(res) {
            console.log('收藏请求响应内容：', res)
            if (res.statusCode === 200) {
              console.log('self.stored', self.stored)
              wx.showToast({
                title: self.stored ? '添加收藏！' : '取消收藏',
                icon: self.stored ? 'success' : 'none',
                duration: 1000
              })
            }
          }
        })
      } else {
        wx.showModal({
          title: '请先登录',
          content: '是否现在就去登录？',
          showCancel: true,
          confirmText: '去登录',
          confirmColor: '#17b393',
          success: function() {
            wx.navigateTo({
              url: '/pages/login/index'
            })
          }
        })
      }
    }
  }
  initPageData() {
    // 获取图书详情
    const self = this
    wx.request({
      url: 'http://localhost:12306/getBookDetail',
      data: {
        book_id: this.bookId
      },
      method: 'get',
      success(res) {
        self.book = res.data[0]
      }
    })
    // 获取用户收藏信息
    if (this.$parent.globalData.authorize) {
      wx.request({
        url: 'http://localhost:12306/getStoreInfo',
        data: {
          user_name: self.userInfo.nickName
        },
        method: 'get',
        success(res) {
          const { user_store } = res.data[0]
          console.log('res.data', res.data, 'user_store', user_store)
          user_store.forEach(function (item, index, arr) {
            if (item === self.book.book_id) {
              self.stored = true
            }
          })
        }
      })
    }
  }
}
</script>
<style lang="less">
  page{
    background: #F3F3F3;
  }
  .container{
    margin-bottom: 104rpx;
  }
  .img-wrap{
    width: 100vw;
    height:492rpx;
    background: #F3F3F3;
    text-align: center;
    .img{
      width: 300rpx;
      height: 414rpx;
      margin-top: 246rpx;
      transform: translateY(-50%);
    }
  }
  .book-msg{
    background: #fff;
    margin-bottom: 8rpx;
    width: 100vw;
    padding: 30rpx 32rpx;
    box-sizing: border-box;
    &__name{
      // margin-top: 30rpx;
      height: 44rpx;
      line-height: 44rpx;
      font-size: 32rpx;
      font-weight: 400;
      color: #1d1d1d;
    }
    &__rent{
      margin-top: 16rpx;
      color: #4a4a4a;
      font-size: 24rpx;
      height: 34rpx;
      line-height: 34rpx;
      .book-rent{
        height: 40rpx;
        line-height: 40rpx;
        color: #1d1d1d;
        font-size: 28rpx;
      }
    }
    &__author, &__publisher, &__score, &__sort{
      height: 48rpx;
      line-height: 48rpx;
      color: #4a4a4a;
      font-size: 24rpx;
    }
    &__author{
      margin-top: 16rpx;
    }
    &__sort{
      .sort-item{
        display: inline-block;
        border-radius: 21rpx;
        border: 1rpx solid #979797;
        padding: 0 16rpx;
        height: 34rpx;
        line-height: 36rpx;
        margin-right: 16rpx;
      }
    }
  }
  .book-desc{
    padding: 20rpx 32rpx;
    background: #fff;
    .desc__title{
      font-size: 28rpx;
      color: #1d1d1d;
      font-weight: 500;
      height: 48rpx;
      line-height: 48rpx;
    }
    .desc__content{
      font-size: 24rpx;
      color: #1d1d1d;
      font-weight: 400;
    }
  }
  .bottom{
    position: fixed;
    bottom: 0;
    background: #fff;
    height: 96rpx;
    width: 100vw;
    display: flex;
    .store{
      width: 140rpx;
      height: 34rpx;
      line-height: 34rpx;
      margin-top: 30rpx;
      text-align: center;
      border-right: 1px solid #979797;
      .img{
        position: absolute;
        top: 10rpx;
        left: 32rpx;
        width: 50rpx;
        height: 50rpx;
        padding: 15rpx;
      }
    }
    .go-shelf{
      width: 160rpx;
      text-align: center;
      margin-top: 22rpx;
      .img{
        width: 50rpx;
        height: 50rpx;
      }
    }
    .add-shelf{
      flex: 1;
      align-self: center;
      padding: 0 12rpx;
      button{
        height: 80rpx;
        line-height: 80rpx;
        color: #fff;
        border-radius: 8rpx;
        background: #17b393;
        border: 0;
      }
    }
  }
</style>
