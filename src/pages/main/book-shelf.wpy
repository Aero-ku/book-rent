<template>
  <view>
    <view class="order">
      <view class="order-head">原订单</view>
      <view class="order-body">{{orderId}}</view>
      <view class="order-footer">
        <picker bindchange="bindPickerChange" value="{{index}}" range="{{orderList}}">
          <view class="picker">
            重新选择
          </view>
        </picker>
      </view>
    </view>
    <view class="weui-panel filling">
      <view class="weui-panel__bd">
        <checkbox-group bindchange="checkboxChange">
          <view wx:for="{{borrowList}}" wx:key="index" class="weui-cell book-item">
            <checkbox id="{{unique}}-{{index}}" hidden value="{{item.book_id}}" checked="{{item.checked}}"/>
            <block wx:if="{{!item.stock}}">
              <view class="check-wrap">
                <view class="sell-out">
                  <view class="sell-text">已借完</view>
                </view>
              </view>
            </block>
            <block wx:else>
              <label for="{{unique}}-{{index}}" class="check-wrap">
                <icon wx:if="{{item.checked}}" class="weui-icon-checkbox_success" type="success" size="18" color="#5cbaa7"></icon>
                <icon wx:else class="weui-icon-checkbox_circle" type="circle" size="18"></icon>
              </label>
            </block>
            <navigator url="/pages/main/detail?id={{item.book_id}}" class="cart-book-navigator">
              <view class="cart-book">
                <view class="book-img-wrap">
                  <view wx:if="{{item.hasBorrow}}" class="coupon-expired">已借阅</view>
                  <image class="book-img" src="{{item.book_image}}" mode="aspectFit"></image>
                </view>
                <view class="book-title">{{item.book_name}}</view>
                <view class="cut_price">买断价：￥{{item.cut_price}}</view>
              </view>
            </navigator>
          </view>
        </checkbox-group>
      </view>
    </view>
    <view class="bottom">
        <label for="all" class="check-wrap-all">
          <icon wx:if="{{selectAllState}}" class="weui-icon-checkbox_success" type="success" size="18" color="#5cbaa7"></icon>
          <icon wx:else class="weui-icon-checkbox_circle" type="circle" size="18"></icon>
          <view class="select-txt">
            <text wx:if="{{!selectAllState}}">全选</text>
            <text wx:else>取消全选</text>
          </view>
        </label>
      <checkbox-group bindchange="selectAllChange">
        <checkbox hidden checked="{{selectAllState}}" value="select" id="all"/>
      </checkbox-group>
      <button class="btn" @tap="goBuy">买断</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import { service } from '../../config.js'
import http from '../../mixins/http'
import base from '../../mixins/base'
export default class buyComplete extends wepy.page {
  mixins = [base, http]
  config = {
      navigationBarTitleText: '买断',
      navigationBarBackgroundColor: 'white',
      navigationBarTextStyle: 'black'
  }
  data = {
    borrowList: [],
    selectAllState: false,
    orderList: ['123441234', '2345123412', '3412341256', '56123412378'],
    orderId: '',
    selectCount: 0
  }
  methods = {
    checkboxChange(e) {
      console.log(e.detail)
      console.log('checkbox发生change事件，携带value值为：', e.detail.value, this.borrowList.length)
      this.selectBookCartItem( e.detail.value )
      if (e.detail.value.length < this.borrowList.length) {
        this.selectAllState = false
      }
    },
    // 全选、取消全选
    selectAllChange(e) {
      console.log('selectAllChange事件，携带value值为：', e.detail.value)
      this.selectAllState = !this.selectAllState
      let idsArr = []
      let len = this.borrowList.length
      if (e.detail.value[0] === 'select' ) {
        for (let i = len - 1; i >= 0; i--){
          idsArr.push(this.borrowList[i].book_id)
        }
      }
      this.selectBookCartItem(idsArr)
    },
    // picker选择改变时
    bindPickerChange(e) {
      this.orderId = this.orderList[e.detail.value]
    },
    goBuy() {
      if(this.selectCount > 0){
        wx.navigateTo({
          url: '/pages/user/buy_complete_order'
        })
      } else {
        wx.showModal({
          title: '提示',
          content: '请您至少选择一本图书',
          showCancel: false
        })
      }
    }
  }
  onLoad(query) {
    console.log('query', query)
    this.orderId = this.getString(query && query.orderId)
    //初始化页面数据
    
    console.log('borrowList:', this.borrowList)
  }
  onShow() {
    this.initPageData()
  }
  initPageData() {
    const self = this
    console.log('hhahaha', this.$get)
    // this.$get({url: `${service.buyCompleteOrder}?orderId=${this.orderId}`}, {
    //   success: (res) => {
    //     console.log(data, '=======================+++++++++++++++============')
    //   },
    //   fail: ({code, data}) => {

    //   }
    // })
    wx.request({
      url: `${service.buyCompleteOrder}?orderId=${this.orderId}`,
      data: {
        orderId: self.orderId
      },
      success(res) {
        console.log('res:', res.data.borrowList)
        self.borrowList = res.data.borrowList
      }
    })
    wx.request({
      url: `${service.selectOrder}?orderId=${this.orderId}`,
      success(res) {
        console.log('res:', res.data)
        self.orderList = res.data.data
      }
    })
  }
  // 修改选中图书项目
  selectBookCartItem(bookIdArr) {
    let selectBooks = this.getArray(bookIdArr, [])
    let borrowList = this.borrowList
    this.selectCount = bookIdArr.length;
    for(let i = borrowList.length - 1; i >= 0; i--) {
      if(selectBooks.indexOf(borrowList[i].book_id) >= 0) {
        borrowList[i].checked = true
      } else {
        borrowList[i].checked = false
      }
    }
  }
}
</script>
<style lang="less">
  button, view, text{
    font-weight: 400
  }
  .order{
    display: flex;
    background: #fff;
    height: 60rpx;
    line-height: 60rpx;
    padding: 0 16rpx;
    view{
      flex: 1;
      font-size: 24rpx;
      color: #1d1d1d;
    }
    .order-footer {
      text-align: right;
      .picker{
        color: #17b393;
      }
    }
  }
  .book-item{
    box-sizing: border-box;
    position: relative;
    display: flex;
    align-items: stretch;
    padding-left: 0rpx;
    padding-right: 0rpx;
    width: 100vw;
  }
  .check-wrap{
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
  }
  .sell-out{
    display: flex;
    justify-content: center;
    align-items: center;
    .sell-text{
      font-size: 20rpx;
      color: #999999;
      line-height: 1;
    }
  }
  .book-img-wrap{
    float: left;
    margin-right: 8rpx;
    .book-img{
      display: block;
      width: 99rpx;
      height: 132rpx;
    }
  }
  .cart-book-navigator{
    flex-grow: 1;
  }
  .cart-book{
    display: flex;
    align-items: center;
    flex-grow: 1;
    overflow: hidden;
  }
  .cut_price{
    position: absolute;
    right: 28rpx;
    bottom: 12rpx;
    font-size: 24rpx;
    font-weight: 400;
  }
  .book-title{
    font-size: 24rpx;
    font-weight: 400;
    max-width: 500rpx;
  }
  .bottom{
    position: fixed;
    display: flex;
    box-sizing: border-box;
    left: 0;
    bottom: 0;
    z-index: 10;
    height: 90rpx;
    width: 100vw;
    background: #fff;
    padding: 0 16rpx;
    justify-content: space-between;
  }
  .check-wrap-all{
    height: 90rpx;
    align-self: center;
  }
  .select-txt{
    display: inline;
    font-size: 24rpx;
    font-weight: 400;
    color: #1d1d1d;
    margin-left: 12rpx;
    height: 90rpx;
    line-height: 90rpx;
  }
  checkbox-group{
    display: inline-block;
  }
  .btn{
    // position: absolute;
    display: inline-block;
    margin: 0;
    padding: 0;
    width: 160rpx;
    height: 76rpx;
    line-height: 76rpx;
    border: 1px solid #17b393;
    color: #17b393;
    background: #fff;
    font-size: 32rpx;
    align-self: center;
  }
</style>


